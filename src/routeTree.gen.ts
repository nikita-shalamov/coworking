/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SupportLazyImport = createFileRoute('/support')()
const SignupLazyImport = createFileRoute('/signup')()
const ProfileLazyImport = createFileRoute('/profile')()
const LoginpageLazyImport = createFileRoute('/loginpage')()
const LoginLazyImport = createFileRoute('/login')()
const ForbusinessLazyImport = createFileRoute('/forbusiness')()
const CoworkingsLazyImport = createFileRoute('/coworkings')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SupportLazyRoute = SupportLazyImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/support.lazy').then((d) => d.Route))

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LoginpageLazyRoute = LoginpageLazyImport.update({
  path: '/loginpage',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/loginpage.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForbusinessLazyRoute = ForbusinessLazyImport.update({
  path: '/forbusiness',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/forbusiness.lazy').then((d) => d.Route))

const CoworkingsLazyRoute = CoworkingsLazyImport.update({
  path: '/coworkings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/coworkings.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/coworkings': {
      preLoaderRoute: typeof CoworkingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/forbusiness': {
      preLoaderRoute: typeof ForbusinessLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/loginpage': {
      preLoaderRoute: typeof LoginpageLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      preLoaderRoute: typeof SupportLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  CoworkingsLazyRoute,
  ForbusinessLazyRoute,
  LoginLazyRoute,
  LoginpageLazyRoute,
  ProfileLazyRoute,
  SignupLazyRoute,
  SupportLazyRoute,
])

/* prettier-ignore-end */
